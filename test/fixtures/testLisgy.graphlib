{
  "code": "(match [n m] [0 0] [\"FizzBuzz\"] [0 _] [\"Fizz\"] [_ 0] [\"Buzz\"] :else [n])",
  "nodes": [
    {
      "v": "match_0_name",
      "value": {
        "id": "match_0",
        "inputPorts": {
          "n": "generic",
          "m": "generic"
        },
        "outputPorts": {
          "out_0": "generic"
        },
        "implementation": {
          "nodes": [
            {
              "name": "match_rules_1",
              "rules": [
                {
                  "inputs": [
                    {
                      "variable": false,
                      "type": "number",
                      "value/const": 0,
                      "name": "n"
                    },
                    {
                      "variable": false,
                      "type": "number",
                      "value/const": 0,
                      "name": "m"
                    }
                  ],
                  "outputs": [
                    {
                      "variable": false,
                      "type": "string",
                      "value/const": "FizzBuzz",
                      "name": "out_0"
                    }
                  ]
                },
                {
                  "inputs": [
                    {
                      "variable": false,
                      "type": "number",
                      "value/const": 0,
                      "name": "n"
                    },
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "m",
                      "name": "m"
                    }
                  ],
                  "outputs": [
                    {
                      "variable": false,
                      "type": "string",
                      "value/const": "Fizz",
                      "name": "out_0"
                    }
                  ]
                },
                {
                  "inputs": [
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "n",
                      "name": "n"
                    },
                    {
                      "variable": false,
                      "type": "number",
                      "value/const": 0,
                      "name": "m"
                    }
                  ],
                  "outputs": [
                    {
                      "variable": false,
                      "type": "string",
                      "value/const": "Buzz",
                      "name": "out_0"
                    }
                  ]
                },
                {
                  "inputs": [
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "n",
                      "name": "n"
                    },
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "m",
                      "name": "m"
                    }
                  ],
                  "outputs": [
                    {
                      "variable": true,
                      "type": "generic",
                      "value": "n",
                      "name": "out_0"
                    }
                  ]
                }
              ],
              "inputPorts": {
                "m": "generic",
                "n": "generic"
              },
              "outputPorts": {
                "out_0": "generic"
              }
            }
          ],
          "edges": [
            {
              "from": "n",
              "to": "match_rules_1:n"
            },
            {
              "from": "m",
              "to": "match_rules_1:m"
            },
            {
              "from": "match_rules:out_0",
              "to": "out_0"
            }
          ]
        },
        "name": "match_0_name"
      }
    }
  ],
  "edges": []
}
